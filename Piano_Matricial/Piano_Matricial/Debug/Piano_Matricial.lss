
Piano_Matricial.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000a  00800100  000005ae  00000622  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000005ae  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  0000062c  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000065c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000038  00000000  00000000  0000069c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000bad  00000000  00000000  000006d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000754  00000000  00000000  00001281  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000007a2  00000000  00000000  000019d5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000064  00000000  00000000  00002178  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003fc  00000000  00000000  000021dc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000002c1  00000000  00000000  000025d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000028  00000000  00000000  00002899  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   8:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  10:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  14:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  18:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  1c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  20:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  24:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  28:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  2c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  30:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  34:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  38:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  3c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  40:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  44:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  48:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  4c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  50:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  54:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  58:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  5c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  60:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  64:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ee ea       	ldi	r30, 0xAE	; 174
  7c:	f5 e0       	ldi	r31, 0x05	; 5
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	aa 30       	cpi	r26, 0x0A	; 10
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>
  8a:	0e 94 71 00 	call	0xe2	; 0xe2 <main>
  8e:	0c 94 d5 02 	jmp	0x5aa	; 0x5aa <_exit>

00000092 <__bad_interrupt>:
  92:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000096 <Tone_Generator>:
				}
			}
		}
	}

int Tone_Generator(int Note){				//Generamos los tonos
  96:	9c 01       	movw	r18, r24
		TCCR1A |= (1<<COM1A0);
  98:	e0 e8       	ldi	r30, 0x80	; 128
  9a:	f0 e0       	ldi	r31, 0x00	; 0
  9c:	90 81       	ld	r25, Z
  9e:	90 64       	ori	r25, 0x40	; 64
  a0:	90 83       	st	Z, r25
		OCR1A = Note;
  a2:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
  a6:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
		TCCR1B |=(1<<WGM12)|(1<<CS10);
  aa:	e1 e8       	ldi	r30, 0x81	; 129
  ac:	f0 e0       	ldi	r31, 0x00	; 0
  ae:	80 81       	ld	r24, Z
  b0:	89 60       	ori	r24, 0x09	; 9
  b2:	80 83       	st	Z, r24
}
  b4:	08 95       	ret

000000b6 <Mute_Generator>:

int Mute_Generator(){						//Silenciamos los tonos
		TCCR1A &=~ (1<<COM1A0);
  b6:	e0 e8       	ldi	r30, 0x80	; 128
  b8:	f0 e0       	ldi	r31, 0x00	; 0
  ba:	80 81       	ld	r24, Z
  bc:	8f 7b       	andi	r24, 0xBF	; 191
  be:	80 83       	st	Z, r24
		OCR1A = 0;
  c0:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
  c4:	10 92 88 00 	sts	0x0088, r1	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
		TCCR1B &=~(1<<WGM12)|(1<<CS10);
  c8:	e1 e8       	ldi	r30, 0x81	; 129
  ca:	f0 e0       	ldi	r31, 0x00	; 0
  cc:	80 81       	ld	r24, Z
  ce:	87 7f       	andi	r24, 0xF7	; 247
  d0:	80 83       	st	Z, r24
}
  d2:	08 95       	ret

000000d4 <Debouncer>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  d4:	87 e8       	ldi	r24, 0x87	; 135
  d6:	93 e1       	ldi	r25, 0x13	; 19
  d8:	01 97       	sbiw	r24, 0x01	; 1
  da:	f1 f7       	brne	.-4      	; 0xd8 <Debouncer+0x4>
  dc:	00 c0       	rjmp	.+0      	; 0xde <Debouncer+0xa>
  de:	00 00       	nop

int Debouncer(){
	_delay_ms(20);
  e0:	08 95       	ret

000000e2 <main>:
#define La4ta  1135
#define LaS4ta  1365
#define Si4ta  1013

int main(void)
{	DDRC = 0X1F;	//PUERTO QUE SACA EL CODIGO DE LECTURA
  e2:	cf 93       	push	r28
  e4:	df 93       	push	r29
  e6:	cd b7       	in	r28, 0x3d	; 61
  e8:	de b7       	in	r29, 0x3e	; 62
  ea:	2a 97       	sbiw	r28, 0x0a	; 10
  ec:	0f b6       	in	r0, 0x3f	; 63
  ee:	f8 94       	cli
  f0:	de bf       	out	0x3e, r29	; 62
  f2:	0f be       	out	0x3f, r0	; 63
  f4:	cd bf       	out	0x3d, r28	; 61
  f6:	8f e1       	ldi	r24, 0x1F	; 31
  f8:	87 b9       	out	0x07, r24	; 7
	PORTC = 0X00;
  fa:	18 b8       	out	0x08, r1	; 8
	
	PORTD = 0X1F;	//PUERTO QUE RECIBE EL CODIGO
  fc:	8b b9       	out	0x0b, r24	; 11
	
	DDRB = (1<<1);	//PUERTO QUE GENERA LOS TONOS
  fe:	82 e0       	ldi	r24, 0x02	; 2
 100:	84 b9       	out	0x04, r24	; 4
	
    int PIANO_CODE_VAR[5] = {0x1E,0X1D,0X1B,0X17,0X0F};	//MATRIZ DE CODIGOS
 102:	8a e0       	ldi	r24, 0x0A	; 10
 104:	e0 e0       	ldi	r30, 0x00	; 0
 106:	f1 e0       	ldi	r31, 0x01	; 1
 108:	de 01       	movw	r26, r28
 10a:	11 96       	adiw	r26, 0x01	; 1
 10c:	01 90       	ld	r0, Z+
 10e:	0d 92       	st	X+, r0
 110:	8a 95       	dec	r24
 112:	e1 f7       	brne	.-8      	; 0x10c <main+0x2a>
	int Mute_Generator();		//Genera un silencio si no se presiona una tecla en especifico
	int Debouncer();			//Retraso general
	
    while (1) 
    {
		for(i = 0; i <= 4 ; i += 1){
 114:	00 e0       	ldi	r16, 0x00	; 0
 116:	10 e0       	ldi	r17, 0x00	; 0
 118:	44 c2       	rjmp	.+1160   	; 0x5a2 <__EEPROM_REGION_LENGTH__+0x1a2>
			for(j = 0; j <= 4 ; j += 1){		
				Lwr_Asig = PIANO_CODE_VAR[j];	//Codigo Movil
 11a:	f7 01       	movw	r30, r14
 11c:	ee 0f       	add	r30, r30
 11e:	ff 1f       	adc	r31, r31
 120:	81 e0       	ldi	r24, 0x01	; 1
 122:	90 e0       	ldi	r25, 0x00	; 0
 124:	8c 0f       	add	r24, r28
 126:	9d 1f       	adc	r25, r29
 128:	e8 0f       	add	r30, r24
 12a:	f9 1f       	adc	r31, r25
 12c:	c0 80       	ld	r12, Z
 12e:	d1 80       	ldd	r13, Z+1	; 0x01
				
				PORTC = PIANO_CODE_VAR[i];		//Codigo Inmovil
 130:	f8 01       	movw	r30, r16
 132:	ee 0f       	add	r30, r30
 134:	ff 1f       	adc	r31, r31
 136:	e8 0f       	add	r30, r24
 138:	f9 1f       	adc	r31, r25
 13a:	80 81       	ld	r24, Z
 13c:	88 b9       	out	0x08, r24	; 8
				Debouncer();
 13e:	0e 94 6a 00 	call	0xd4	; 0xd4 <Debouncer>
				Entry_Asig = PIND;
 142:	a9 b0       	in	r10, 0x09	; 9
 144:	b1 2c       	mov	r11, r1
				
				if(i == 0){
 146:	01 15       	cp	r16, r1
 148:	11 05       	cpc	r17, r1
 14a:	09 f0       	breq	.+2      	; 0x14e <main+0x6c>
 14c:	69 c0       	rjmp	.+210    	; 0x220 <main+0x13e>
					//Primera Octava(4ta Octava Equivalente)
					if (Entry_Asig == Lwr_Asig && Entry_Asig == 0X1E){		//Enviamos un (Do4ta) a la salida del puerto B
 14e:	ca 14       	cp	r12, r10
 150:	db 04       	cpc	r13, r11
 152:	89 f4       	brne	.+34     	; 0x176 <main+0x94>
 154:	9e e1       	ldi	r25, 0x1E	; 30
 156:	a9 16       	cp	r10, r25
 158:	b1 04       	cpc	r11, r1
 15a:	69 f4       	brne	.+26     	; 0x176 <main+0x94>
 15c:	08 c0       	rjmp	.+16     	; 0x16e <main+0x8c>
						while(Entry_Asig == Lwr_Asig){
							Debouncer();
 15e:	0e 94 6a 00 	call	0xd4	; 0xd4 <Debouncer>
							Entry_Asig = PIND;
 162:	a9 b0       	in	r10, 0x09	; 9
 164:	b1 2c       	mov	r11, r1
							Tone_Generator(Do4ta);}
 166:	8a e7       	ldi	r24, 0x7A	; 122
 168:	97 e0       	ldi	r25, 0x07	; 7
 16a:	0e 94 4b 00 	call	0x96	; 0x96 <Tone_Generator>
				Entry_Asig = PIND;
				
				if(i == 0){
					//Primera Octava(4ta Octava Equivalente)
					if (Entry_Asig == Lwr_Asig && Entry_Asig == 0X1E){		//Enviamos un (Do4ta) a la salida del puerto B
						while(Entry_Asig == Lwr_Asig){
 16e:	ac 14       	cp	r10, r12
 170:	bd 04       	cpc	r11, r13
 172:	a9 f3       	breq	.-22     	; 0x15e <main+0x7c>
 174:	55 c0       	rjmp	.+170    	; 0x220 <main+0x13e>
							Debouncer();
							Entry_Asig = PIND;
							Tone_Generator(Do4ta);}
	
					}else if(Entry_Asig == Lwr_Asig && Entry_Asig == 0X1D){	//Enviamos un (Do#4ta) a la salida del puerto B
 176:	ca 14       	cp	r12, r10
 178:	db 04       	cpc	r13, r11
 17a:	89 f4       	brne	.+34     	; 0x19e <main+0xbc>
 17c:	8d e1       	ldi	r24, 0x1D	; 29
 17e:	a8 16       	cp	r10, r24
 180:	b1 04       	cpc	r11, r1
 182:	69 f4       	brne	.+26     	; 0x19e <main+0xbc>
 184:	08 c0       	rjmp	.+16     	; 0x196 <main+0xb4>
						while(Entry_Asig == Lwr_Asig){
							Debouncer();
 186:	0e 94 6a 00 	call	0xd4	; 0xd4 <Debouncer>
							Entry_Asig = PIND;
 18a:	a9 b0       	in	r10, 0x09	; 9
 18c:	b1 2c       	mov	r11, r1
							Tone_Generator(DoS4ta);}
 18e:	8c e0       	ldi	r24, 0x0C	; 12
 190:	97 e0       	ldi	r25, 0x07	; 7
 192:	0e 94 4b 00 	call	0x96	; 0x96 <Tone_Generator>
							Debouncer();
							Entry_Asig = PIND;
							Tone_Generator(Do4ta);}
	
					}else if(Entry_Asig == Lwr_Asig && Entry_Asig == 0X1D){	//Enviamos un (Do#4ta) a la salida del puerto B
						while(Entry_Asig == Lwr_Asig){
 196:	ac 14       	cp	r10, r12
 198:	bd 04       	cpc	r11, r13
 19a:	a9 f3       	breq	.-22     	; 0x186 <main+0xa4>
 19c:	41 c0       	rjmp	.+130    	; 0x220 <main+0x13e>
							Debouncer();
							Entry_Asig = PIND;
							Tone_Generator(DoS4ta);}
						
					}else if(Entry_Asig == Lwr_Asig && Entry_Asig == 0X1B){	//Enviamos un (Re4ta) a la salida del puerto B
 19e:	ca 14       	cp	r12, r10
 1a0:	db 04       	cpc	r13, r11
 1a2:	89 f4       	brne	.+34     	; 0x1c6 <main+0xe4>
 1a4:	9b e1       	ldi	r25, 0x1B	; 27
 1a6:	a9 16       	cp	r10, r25
 1a8:	b1 04       	cpc	r11, r1
 1aa:	69 f4       	brne	.+26     	; 0x1c6 <main+0xe4>
 1ac:	08 c0       	rjmp	.+16     	; 0x1be <main+0xdc>
						while(Entry_Asig == Lwr_Asig){
							Debouncer();
 1ae:	0e 94 6a 00 	call	0xd4	; 0xd4 <Debouncer>
							Entry_Asig = PIND;
 1b2:	a9 b0       	in	r10, 0x09	; 9
 1b4:	b1 2c       	mov	r11, r1
							Tone_Generator(Re4ta);}
 1b6:	89 ea       	ldi	r24, 0xA9	; 169
 1b8:	96 e0       	ldi	r25, 0x06	; 6
 1ba:	0e 94 4b 00 	call	0x96	; 0x96 <Tone_Generator>
							Debouncer();
							Entry_Asig = PIND;
							Tone_Generator(DoS4ta);}
						
					}else if(Entry_Asig == Lwr_Asig && Entry_Asig == 0X1B){	//Enviamos un (Re4ta) a la salida del puerto B
						while(Entry_Asig == Lwr_Asig){
 1be:	ac 14       	cp	r10, r12
 1c0:	bd 04       	cpc	r11, r13
 1c2:	a9 f3       	breq	.-22     	; 0x1ae <main+0xcc>
 1c4:	2d c0       	rjmp	.+90     	; 0x220 <main+0x13e>
							Debouncer();
							Entry_Asig = PIND;
							Tone_Generator(Re4ta);}
						
					}else if(Entry_Asig == Lwr_Asig && Entry_Asig == 0X17){	//Enviamos un (Re#4ta) a la salida del puerto B
 1c6:	ca 14       	cp	r12, r10
 1c8:	db 04       	cpc	r13, r11
 1ca:	89 f4       	brne	.+34     	; 0x1ee <main+0x10c>
 1cc:	87 e1       	ldi	r24, 0x17	; 23
 1ce:	a8 16       	cp	r10, r24
 1d0:	b1 04       	cpc	r11, r1
 1d2:	69 f4       	brne	.+26     	; 0x1ee <main+0x10c>
 1d4:	08 c0       	rjmp	.+16     	; 0x1e6 <main+0x104>
						while(Entry_Asig == Lwr_Asig){
							Debouncer();
 1d6:	0e 94 6a 00 	call	0xd4	; 0xd4 <Debouncer>
							Entry_Asig = PIND;
 1da:	a9 b0       	in	r10, 0x09	; 9
 1dc:	b1 2c       	mov	r11, r1
							Tone_Generator(ReS4ta);}
 1de:	86 e4       	ldi	r24, 0x46	; 70
 1e0:	96 e0       	ldi	r25, 0x06	; 6
 1e2:	0e 94 4b 00 	call	0x96	; 0x96 <Tone_Generator>
							Debouncer();
							Entry_Asig = PIND;
							Tone_Generator(Re4ta);}
						
					}else if(Entry_Asig == Lwr_Asig && Entry_Asig == 0X17){	//Enviamos un (Re#4ta) a la salida del puerto B
						while(Entry_Asig == Lwr_Asig){
 1e6:	ac 14       	cp	r10, r12
 1e8:	bd 04       	cpc	r11, r13
 1ea:	a9 f3       	breq	.-22     	; 0x1d6 <main+0xf4>
 1ec:	19 c0       	rjmp	.+50     	; 0x220 <main+0x13e>
							Debouncer();
							Entry_Asig = PIND;
							Tone_Generator(ReS4ta);}
						
					}else if(Entry_Asig == Lwr_Asig && Entry_Asig == 0X0F){	//Enviamos un (Mi4ta) a la salida del puerto B
 1ee:	ca 14       	cp	r12, r10
 1f0:	db 04       	cpc	r13, r11
 1f2:	89 f4       	brne	.+34     	; 0x216 <main+0x134>
 1f4:	9f e0       	ldi	r25, 0x0F	; 15
 1f6:	a9 16       	cp	r10, r25
 1f8:	b1 04       	cpc	r11, r1
 1fa:	69 f4       	brne	.+26     	; 0x216 <main+0x134>
 1fc:	08 c0       	rjmp	.+16     	; 0x20e <main+0x12c>
						while(Entry_Asig == Lwr_Asig){
							Debouncer();
 1fe:	0e 94 6a 00 	call	0xd4	; 0xd4 <Debouncer>
							Entry_Asig = PIND;
 202:	a9 b0       	in	r10, 0x09	; 9
 204:	b1 2c       	mov	r11, r1
							Tone_Generator(Mi4ta);}
 206:	8e ee       	ldi	r24, 0xEE	; 238
 208:	95 e0       	ldi	r25, 0x05	; 5
 20a:	0e 94 4b 00 	call	0x96	; 0x96 <Tone_Generator>
							Debouncer();
							Entry_Asig = PIND;
							Tone_Generator(ReS4ta);}
						
					}else if(Entry_Asig == Lwr_Asig && Entry_Asig == 0X0F){	//Enviamos un (Mi4ta) a la salida del puerto B
						while(Entry_Asig == Lwr_Asig){
 20e:	ac 14       	cp	r10, r12
 210:	bd 04       	cpc	r11, r13
 212:	a9 f3       	breq	.-22     	; 0x1fe <main+0x11c>
 214:	05 c0       	rjmp	.+10     	; 0x220 <main+0x13e>
							Debouncer();
							Entry_Asig = PIND;
							Tone_Generator(Mi4ta);}
							
					}else if(Entry_Asig != Lwr_Asig ){Mute_Generator();}
 216:	ca 14       	cp	r12, r10
 218:	db 04       	cpc	r13, r11
 21a:	11 f0       	breq	.+4      	; 0x220 <main+0x13e>
 21c:	0e 94 5b 00 	call	0xb6	; 0xb6 <Mute_Generator>
					}
					
				if(i == 1){
 220:	01 30       	cpi	r16, 0x01	; 1
 222:	11 05       	cpc	r17, r1
 224:	09 f0       	breq	.+2      	; 0x228 <main+0x146>
 226:	69 c0       	rjmp	.+210    	; 0x2fa <main+0x218>
					if (Entry_Asig == Lwr_Asig && Entry_Asig == 0X1E){		//Enviamos un (Fa4ta) a la salida del puerto D
 228:	ac 14       	cp	r10, r12
 22a:	bd 04       	cpc	r11, r13
 22c:	89 f4       	brne	.+34     	; 0x250 <main+0x16e>
 22e:	8e e1       	ldi	r24, 0x1E	; 30
 230:	a8 16       	cp	r10, r24
 232:	b1 04       	cpc	r11, r1
 234:	69 f4       	brne	.+26     	; 0x250 <main+0x16e>
 236:	08 c0       	rjmp	.+16     	; 0x248 <main+0x166>
						while(Entry_Asig == Lwr_Asig){
							Debouncer();
 238:	0e 94 6a 00 	call	0xd4	; 0xd4 <Debouncer>
							Entry_Asig = PIND;
 23c:	a9 b0       	in	r10, 0x09	; 9
 23e:	b1 2c       	mov	r11, r1
							Tone_Generator(Fa4ta);}
 240:	85 e8       	ldi	r24, 0x85	; 133
 242:	95 e0       	ldi	r25, 0x05	; 5
 244:	0e 94 4b 00 	call	0x96	; 0x96 <Tone_Generator>
					}else if(Entry_Asig != Lwr_Asig ){Mute_Generator();}
					}
					
				if(i == 1){
					if (Entry_Asig == Lwr_Asig && Entry_Asig == 0X1E){		//Enviamos un (Fa4ta) a la salida del puerto D
						while(Entry_Asig == Lwr_Asig){
 248:	ac 14       	cp	r10, r12
 24a:	bd 04       	cpc	r11, r13
 24c:	a9 f3       	breq	.-22     	; 0x238 <main+0x156>
 24e:	55 c0       	rjmp	.+170    	; 0x2fa <main+0x218>
							Debouncer();
							Entry_Asig = PIND;
							Tone_Generator(Fa4ta);}
							
					}else if(Entry_Asig == Lwr_Asig && Entry_Asig == 0X1D){	//Enviamos un (Fa#4ta) a la salida del puerto D
 250:	ac 14       	cp	r10, r12
 252:	bd 04       	cpc	r11, r13
 254:	89 f4       	brne	.+34     	; 0x278 <main+0x196>
 256:	9d e1       	ldi	r25, 0x1D	; 29
 258:	a9 16       	cp	r10, r25
 25a:	b1 04       	cpc	r11, r1
 25c:	69 f4       	brne	.+26     	; 0x278 <main+0x196>
 25e:	08 c0       	rjmp	.+16     	; 0x270 <main+0x18e>
						while(Entry_Asig == Lwr_Asig){
							Debouncer();
 260:	0e 94 6a 00 	call	0xd4	; 0xd4 <Debouncer>
							Entry_Asig = PIND;
 264:	a9 b0       	in	r10, 0x09	; 9
 266:	b1 2c       	mov	r11, r1
							Tone_Generator(FaS4ta);}
 268:	89 e4       	ldi	r24, 0x49	; 73
 26a:	95 e0       	ldi	r25, 0x05	; 5
 26c:	0e 94 4b 00 	call	0x96	; 0x96 <Tone_Generator>
							Debouncer();
							Entry_Asig = PIND;
							Tone_Generator(Fa4ta);}
							
					}else if(Entry_Asig == Lwr_Asig && Entry_Asig == 0X1D){	//Enviamos un (Fa#4ta) a la salida del puerto D
						while(Entry_Asig == Lwr_Asig){
 270:	ac 14       	cp	r10, r12
 272:	bd 04       	cpc	r11, r13
 274:	a9 f3       	breq	.-22     	; 0x260 <main+0x17e>
 276:	41 c0       	rjmp	.+130    	; 0x2fa <main+0x218>
							Debouncer();
							Entry_Asig = PIND;
							Tone_Generator(FaS4ta);}
							
					}else if(Entry_Asig == Lwr_Asig && Entry_Asig == 0X1B){	//Enviamos un (Sol4ta) a la salida del puerto D
 278:	ac 14       	cp	r10, r12
 27a:	bd 04       	cpc	r11, r13
 27c:	89 f4       	brne	.+34     	; 0x2a0 <main+0x1be>
 27e:	8b e1       	ldi	r24, 0x1B	; 27
 280:	a8 16       	cp	r10, r24
 282:	b1 04       	cpc	r11, r1
 284:	69 f4       	brne	.+26     	; 0x2a0 <main+0x1be>
 286:	08 c0       	rjmp	.+16     	; 0x298 <main+0x1b6>
						while(Entry_Asig == Lwr_Asig){
							Debouncer();
 288:	0e 94 6a 00 	call	0xd4	; 0xd4 <Debouncer>
							Entry_Asig = PIND;
 28c:	a9 b0       	in	r10, 0x09	; 9
 28e:	b1 2c       	mov	r11, r1
							Tone_Generator(Sol4ta);}
 290:	8d ef       	ldi	r24, 0xFD	; 253
 292:	94 e0       	ldi	r25, 0x04	; 4
 294:	0e 94 4b 00 	call	0x96	; 0x96 <Tone_Generator>
							Debouncer();
							Entry_Asig = PIND;
							Tone_Generator(FaS4ta);}
							
					}else if(Entry_Asig == Lwr_Asig && Entry_Asig == 0X1B){	//Enviamos un (Sol4ta) a la salida del puerto D
						while(Entry_Asig == Lwr_Asig){
 298:	ac 14       	cp	r10, r12
 29a:	bd 04       	cpc	r11, r13
 29c:	a9 f3       	breq	.-22     	; 0x288 <main+0x1a6>
 29e:	2d c0       	rjmp	.+90     	; 0x2fa <main+0x218>
							Debouncer();
							Entry_Asig = PIND;
							Tone_Generator(Sol4ta);}
							
					}else if(Entry_Asig == Lwr_Asig && Entry_Asig == 0X17){	//Enviamos un (Sol#4ta) a la salida del puerto D
 2a0:	ac 14       	cp	r10, r12
 2a2:	bd 04       	cpc	r11, r13
 2a4:	89 f4       	brne	.+34     	; 0x2c8 <main+0x1e6>
 2a6:	97 e1       	ldi	r25, 0x17	; 23
 2a8:	a9 16       	cp	r10, r25
 2aa:	b1 04       	cpc	r11, r1
 2ac:	69 f4       	brne	.+26     	; 0x2c8 <main+0x1e6>
 2ae:	08 c0       	rjmp	.+16     	; 0x2c0 <main+0x1de>
						while(Entry_Asig == Lwr_Asig){
							Debouncer();
 2b0:	0e 94 6a 00 	call	0xd4	; 0xd4 <Debouncer>
							Entry_Asig = PIND;
 2b4:	a9 b0       	in	r10, 0x09	; 9
 2b6:	b1 2c       	mov	r11, r1
							Tone_Generator(SolS4ta);}
 2b8:	83 eb       	ldi	r24, 0xB3	; 179
 2ba:	94 e0       	ldi	r25, 0x04	; 4
 2bc:	0e 94 4b 00 	call	0x96	; 0x96 <Tone_Generator>
							Debouncer();
							Entry_Asig = PIND;
							Tone_Generator(Sol4ta);}
							
					}else if(Entry_Asig == Lwr_Asig && Entry_Asig == 0X17){	//Enviamos un (Sol#4ta) a la salida del puerto D
						while(Entry_Asig == Lwr_Asig){
 2c0:	ac 14       	cp	r10, r12
 2c2:	bd 04       	cpc	r11, r13
 2c4:	a9 f3       	breq	.-22     	; 0x2b0 <main+0x1ce>
 2c6:	19 c0       	rjmp	.+50     	; 0x2fa <main+0x218>
							Debouncer();
							Entry_Asig = PIND;
							Tone_Generator(SolS4ta);}
							
					}else if(Entry_Asig == Lwr_Asig && Entry_Asig == 0X0F){	//Enviamos un (La4ta) a la salida del puerto D
 2c8:	ac 14       	cp	r10, r12
 2ca:	bd 04       	cpc	r11, r13
 2cc:	89 f4       	brne	.+34     	; 0x2f0 <main+0x20e>
 2ce:	8f e0       	ldi	r24, 0x0F	; 15
 2d0:	a8 16       	cp	r10, r24
 2d2:	b1 04       	cpc	r11, r1
 2d4:	69 f4       	brne	.+26     	; 0x2f0 <main+0x20e>
 2d6:	08 c0       	rjmp	.+16     	; 0x2e8 <main+0x206>
						while(Entry_Asig == Lwr_Asig){
							Debouncer();
 2d8:	0e 94 6a 00 	call	0xd4	; 0xd4 <Debouncer>
							Entry_Asig = PIND;
 2dc:	a9 b0       	in	r10, 0x09	; 9
 2de:	b1 2c       	mov	r11, r1
							Tone_Generator(La4ta);}
 2e0:	8f e6       	ldi	r24, 0x6F	; 111
 2e2:	94 e0       	ldi	r25, 0x04	; 4
 2e4:	0e 94 4b 00 	call	0x96	; 0x96 <Tone_Generator>
							Debouncer();
							Entry_Asig = PIND;
							Tone_Generator(SolS4ta);}
							
					}else if(Entry_Asig == Lwr_Asig && Entry_Asig == 0X0F){	//Enviamos un (La4ta) a la salida del puerto D
						while(Entry_Asig == Lwr_Asig){
 2e8:	ac 14       	cp	r10, r12
 2ea:	bd 04       	cpc	r11, r13
 2ec:	a9 f3       	breq	.-22     	; 0x2d8 <main+0x1f6>
 2ee:	05 c0       	rjmp	.+10     	; 0x2fa <main+0x218>
							Debouncer();
							Entry_Asig = PIND;
							Tone_Generator(La4ta);}
							
					}else if(Entry_Asig != Lwr_Asig ){Mute_Generator();}
 2f0:	ac 14       	cp	r10, r12
 2f2:	bd 04       	cpc	r11, r13
 2f4:	11 f0       	breq	.+4      	; 0x2fa <main+0x218>
 2f6:	0e 94 5b 00 	call	0xb6	; 0xb6 <Mute_Generator>
					}
					
				if(i == 2){
 2fa:	02 30       	cpi	r16, 0x02	; 2
 2fc:	11 05       	cpc	r17, r1
 2fe:	09 f0       	breq	.+2      	; 0x302 <main+0x220>
 300:	69 c0       	rjmp	.+210    	; 0x3d4 <main+0x2f2>
					if (Entry_Asig == Lwr_Asig && Entry_Asig == 0X1E){		//Enviamos un (La#4ta) a la salida del puerto D
 302:	ac 14       	cp	r10, r12
 304:	bd 04       	cpc	r11, r13
 306:	89 f4       	brne	.+34     	; 0x32a <main+0x248>
 308:	9e e1       	ldi	r25, 0x1E	; 30
 30a:	a9 16       	cp	r10, r25
 30c:	b1 04       	cpc	r11, r1
 30e:	69 f4       	brne	.+26     	; 0x32a <main+0x248>
 310:	08 c0       	rjmp	.+16     	; 0x322 <main+0x240>
						while(Entry_Asig == Lwr_Asig){
							Debouncer();
 312:	0e 94 6a 00 	call	0xd4	; 0xd4 <Debouncer>
							Entry_Asig = PIND;
 316:	a9 b0       	in	r10, 0x09	; 9
 318:	b1 2c       	mov	r11, r1
							Tone_Generator(LaS4ta);}
 31a:	85 e5       	ldi	r24, 0x55	; 85
 31c:	95 e0       	ldi	r25, 0x05	; 5
 31e:	0e 94 4b 00 	call	0x96	; 0x96 <Tone_Generator>
					}else if(Entry_Asig != Lwr_Asig ){Mute_Generator();}
					}
					
				if(i == 2){
					if (Entry_Asig == Lwr_Asig && Entry_Asig == 0X1E){		//Enviamos un (La#4ta) a la salida del puerto D
						while(Entry_Asig == Lwr_Asig){
 322:	ac 14       	cp	r10, r12
 324:	bd 04       	cpc	r11, r13
 326:	a9 f3       	breq	.-22     	; 0x312 <main+0x230>
 328:	55 c0       	rjmp	.+170    	; 0x3d4 <main+0x2f2>
							Debouncer();
							Entry_Asig = PIND;
							Tone_Generator(LaS4ta);}
							
					}else if(Entry_Asig == Lwr_Asig && Entry_Asig == 0X1D ){	//Enviamos un (Si4ta) a la salida del puerto D
 32a:	ac 14       	cp	r10, r12
 32c:	bd 04       	cpc	r11, r13
 32e:	89 f4       	brne	.+34     	; 0x352 <main+0x270>
 330:	8d e1       	ldi	r24, 0x1D	; 29
 332:	a8 16       	cp	r10, r24
 334:	b1 04       	cpc	r11, r1
 336:	69 f4       	brne	.+26     	; 0x352 <main+0x270>
 338:	08 c0       	rjmp	.+16     	; 0x34a <main+0x268>
						while(Entry_Asig == Lwr_Asig){
							Debouncer();
 33a:	0e 94 6a 00 	call	0xd4	; 0xd4 <Debouncer>
							Entry_Asig = PIND;
 33e:	a9 b0       	in	r10, 0x09	; 9
 340:	b1 2c       	mov	r11, r1
							Tone_Generator(Si4ta);}
 342:	85 ef       	ldi	r24, 0xF5	; 245
 344:	93 e0       	ldi	r25, 0x03	; 3
 346:	0e 94 4b 00 	call	0x96	; 0x96 <Tone_Generator>
							Debouncer();
							Entry_Asig = PIND;
							Tone_Generator(LaS4ta);}
							
					}else if(Entry_Asig == Lwr_Asig && Entry_Asig == 0X1D ){	//Enviamos un (Si4ta) a la salida del puerto D
						while(Entry_Asig == Lwr_Asig){
 34a:	ac 14       	cp	r10, r12
 34c:	bd 04       	cpc	r11, r13
 34e:	a9 f3       	breq	.-22     	; 0x33a <main+0x258>
 350:	41 c0       	rjmp	.+130    	; 0x3d4 <main+0x2f2>
							Debouncer();
							Entry_Asig = PIND;
							Tone_Generator(Si4ta);}
							
					//Segunda Octava(5ta Octava equivalente)	
					}else if(Entry_Asig == Lwr_Asig && Entry_Asig == 0X1B){	//Enviamos un (Do5ta) a la salida del puerto D
 352:	ac 14       	cp	r10, r12
 354:	bd 04       	cpc	r11, r13
 356:	89 f4       	brne	.+34     	; 0x37a <main+0x298>
 358:	9b e1       	ldi	r25, 0x1B	; 27
 35a:	a9 16       	cp	r10, r25
 35c:	b1 04       	cpc	r11, r1
 35e:	69 f4       	brne	.+26     	; 0x37a <main+0x298>
 360:	08 c0       	rjmp	.+16     	; 0x372 <main+0x290>
						while(Entry_Asig == Lwr_Asig){
							Debouncer();
 362:	0e 94 6a 00 	call	0xd4	; 0xd4 <Debouncer>
							Entry_Asig = PIND;
 366:	a9 b0       	in	r10, 0x09	; 9
 368:	b1 2c       	mov	r11, r1
							Tone_Generator(Do4ta*2);}
 36a:	84 ef       	ldi	r24, 0xF4	; 244
 36c:	9e e0       	ldi	r25, 0x0E	; 14
 36e:	0e 94 4b 00 	call	0x96	; 0x96 <Tone_Generator>
							Entry_Asig = PIND;
							Tone_Generator(Si4ta);}
							
					//Segunda Octava(5ta Octava equivalente)	
					}else if(Entry_Asig == Lwr_Asig && Entry_Asig == 0X1B){	//Enviamos un (Do5ta) a la salida del puerto D
						while(Entry_Asig == Lwr_Asig){
 372:	ac 14       	cp	r10, r12
 374:	bd 04       	cpc	r11, r13
 376:	a9 f3       	breq	.-22     	; 0x362 <main+0x280>
 378:	2d c0       	rjmp	.+90     	; 0x3d4 <main+0x2f2>
							Debouncer();
							Entry_Asig = PIND;
							Tone_Generator(Do4ta*2);}
							
					}else if(Entry_Asig == Lwr_Asig && Entry_Asig == 0X17){	//Enviamos un (Do#5ta) a la salida del puerto D
 37a:	ac 14       	cp	r10, r12
 37c:	bd 04       	cpc	r11, r13
 37e:	89 f4       	brne	.+34     	; 0x3a2 <main+0x2c0>
 380:	87 e1       	ldi	r24, 0x17	; 23
 382:	a8 16       	cp	r10, r24
 384:	b1 04       	cpc	r11, r1
 386:	69 f4       	brne	.+26     	; 0x3a2 <main+0x2c0>
 388:	08 c0       	rjmp	.+16     	; 0x39a <main+0x2b8>
						while(Entry_Asig == Lwr_Asig){
							Debouncer();
 38a:	0e 94 6a 00 	call	0xd4	; 0xd4 <Debouncer>
							Entry_Asig = PIND;
 38e:	a9 b0       	in	r10, 0x09	; 9
 390:	b1 2c       	mov	r11, r1
							Tone_Generator(DoS4ta*2);}
 392:	88 e1       	ldi	r24, 0x18	; 24
 394:	9e e0       	ldi	r25, 0x0E	; 14
 396:	0e 94 4b 00 	call	0x96	; 0x96 <Tone_Generator>
							Debouncer();
							Entry_Asig = PIND;
							Tone_Generator(Do4ta*2);}
							
					}else if(Entry_Asig == Lwr_Asig && Entry_Asig == 0X17){	//Enviamos un (Do#5ta) a la salida del puerto D
						while(Entry_Asig == Lwr_Asig){
 39a:	ac 14       	cp	r10, r12
 39c:	bd 04       	cpc	r11, r13
 39e:	a9 f3       	breq	.-22     	; 0x38a <main+0x2a8>
 3a0:	19 c0       	rjmp	.+50     	; 0x3d4 <main+0x2f2>
							Debouncer();
							Entry_Asig = PIND;
							Tone_Generator(DoS4ta*2);}
							
					}else if(Entry_Asig == Lwr_Asig && Entry_Asig == 0X0F){	//Enviamos un (Re5ta) a la salida del puerto D
 3a2:	ac 14       	cp	r10, r12
 3a4:	bd 04       	cpc	r11, r13
 3a6:	89 f4       	brne	.+34     	; 0x3ca <main+0x2e8>
 3a8:	9f e0       	ldi	r25, 0x0F	; 15
 3aa:	a9 16       	cp	r10, r25
 3ac:	b1 04       	cpc	r11, r1
 3ae:	69 f4       	brne	.+26     	; 0x3ca <main+0x2e8>
 3b0:	08 c0       	rjmp	.+16     	; 0x3c2 <main+0x2e0>
						while(Entry_Asig == Lwr_Asig){
							Debouncer();
 3b2:	0e 94 6a 00 	call	0xd4	; 0xd4 <Debouncer>
							Entry_Asig = PIND;
 3b6:	a9 b0       	in	r10, 0x09	; 9
 3b8:	b1 2c       	mov	r11, r1
							Tone_Generator(Re4ta*2);}
 3ba:	82 e5       	ldi	r24, 0x52	; 82
 3bc:	9d e0       	ldi	r25, 0x0D	; 13
 3be:	0e 94 4b 00 	call	0x96	; 0x96 <Tone_Generator>
							Debouncer();
							Entry_Asig = PIND;
							Tone_Generator(DoS4ta*2);}
							
					}else if(Entry_Asig == Lwr_Asig && Entry_Asig == 0X0F){	//Enviamos un (Re5ta) a la salida del puerto D
						while(Entry_Asig == Lwr_Asig){
 3c2:	ac 14       	cp	r10, r12
 3c4:	bd 04       	cpc	r11, r13
 3c6:	a9 f3       	breq	.-22     	; 0x3b2 <main+0x2d0>
 3c8:	05 c0       	rjmp	.+10     	; 0x3d4 <main+0x2f2>
							Debouncer();
							Entry_Asig = PIND;
							Tone_Generator(Re4ta*2);}
							
					}else if(Entry_Asig != Lwr_Asig ){Mute_Generator();}
 3ca:	ac 14       	cp	r10, r12
 3cc:	bd 04       	cpc	r11, r13
 3ce:	11 f0       	breq	.+4      	; 0x3d4 <main+0x2f2>
 3d0:	0e 94 5b 00 	call	0xb6	; 0xb6 <Mute_Generator>
					}
					
				if(i == 3){	
 3d4:	03 30       	cpi	r16, 0x03	; 3
 3d6:	11 05       	cpc	r17, r1
 3d8:	09 f0       	breq	.+2      	; 0x3dc <main+0x2fa>
 3da:	69 c0       	rjmp	.+210    	; 0x4ae <__EEPROM_REGION_LENGTH__+0xae>
					if (Entry_Asig == Lwr_Asig && Entry_Asig == 0X1E){		//Enviamos un (Re#5ta) a la salida del puerto D
 3dc:	ac 14       	cp	r10, r12
 3de:	bd 04       	cpc	r11, r13
 3e0:	89 f4       	brne	.+34     	; 0x404 <__EEPROM_REGION_LENGTH__+0x4>
 3e2:	8e e1       	ldi	r24, 0x1E	; 30
 3e4:	a8 16       	cp	r10, r24
 3e6:	b1 04       	cpc	r11, r1
 3e8:	69 f4       	brne	.+26     	; 0x404 <__EEPROM_REGION_LENGTH__+0x4>
 3ea:	08 c0       	rjmp	.+16     	; 0x3fc <main+0x31a>
						while(Entry_Asig == Lwr_Asig){
							Debouncer();
 3ec:	0e 94 6a 00 	call	0xd4	; 0xd4 <Debouncer>
							Entry_Asig = PIND;
 3f0:	a9 b0       	in	r10, 0x09	; 9
 3f2:	b1 2c       	mov	r11, r1
							Tone_Generator(ReS4ta*2);}
 3f4:	8c e8       	ldi	r24, 0x8C	; 140
 3f6:	9c e0       	ldi	r25, 0x0C	; 12
 3f8:	0e 94 4b 00 	call	0x96	; 0x96 <Tone_Generator>
					}else if(Entry_Asig != Lwr_Asig ){Mute_Generator();}
					}
					
				if(i == 3){	
					if (Entry_Asig == Lwr_Asig && Entry_Asig == 0X1E){		//Enviamos un (Re#5ta) a la salida del puerto D
						while(Entry_Asig == Lwr_Asig){
 3fc:	ac 14       	cp	r10, r12
 3fe:	bd 04       	cpc	r11, r13
 400:	a9 f3       	breq	.-22     	; 0x3ec <main+0x30a>
 402:	55 c0       	rjmp	.+170    	; 0x4ae <__EEPROM_REGION_LENGTH__+0xae>
							Debouncer();
							Entry_Asig = PIND;
							Tone_Generator(ReS4ta*2);}
							
					}else if(Entry_Asig == Lwr_Asig && Entry_Asig == 0X1D){	//Enviamos un (Mi5ta) a la salida del puerto D
 404:	ac 14       	cp	r10, r12
 406:	bd 04       	cpc	r11, r13
 408:	89 f4       	brne	.+34     	; 0x42c <__EEPROM_REGION_LENGTH__+0x2c>
 40a:	9d e1       	ldi	r25, 0x1D	; 29
 40c:	a9 16       	cp	r10, r25
 40e:	b1 04       	cpc	r11, r1
 410:	69 f4       	brne	.+26     	; 0x42c <__EEPROM_REGION_LENGTH__+0x2c>
 412:	08 c0       	rjmp	.+16     	; 0x424 <__EEPROM_REGION_LENGTH__+0x24>
						while(Entry_Asig == Lwr_Asig){
							Debouncer();
 414:	0e 94 6a 00 	call	0xd4	; 0xd4 <Debouncer>
							Entry_Asig = PIND;
 418:	a9 b0       	in	r10, 0x09	; 9
 41a:	b1 2c       	mov	r11, r1
							Tone_Generator(Mi4ta*2);}
 41c:	8c ed       	ldi	r24, 0xDC	; 220
 41e:	9b e0       	ldi	r25, 0x0B	; 11
 420:	0e 94 4b 00 	call	0x96	; 0x96 <Tone_Generator>
							Debouncer();
							Entry_Asig = PIND;
							Tone_Generator(ReS4ta*2);}
							
					}else if(Entry_Asig == Lwr_Asig && Entry_Asig == 0X1D){	//Enviamos un (Mi5ta) a la salida del puerto D
						while(Entry_Asig == Lwr_Asig){
 424:	ac 14       	cp	r10, r12
 426:	bd 04       	cpc	r11, r13
 428:	a9 f3       	breq	.-22     	; 0x414 <__EEPROM_REGION_LENGTH__+0x14>
 42a:	41 c0       	rjmp	.+130    	; 0x4ae <__EEPROM_REGION_LENGTH__+0xae>
							Debouncer();
							Entry_Asig = PIND;
							Tone_Generator(Mi4ta*2);}
							
					}else if(Entry_Asig == Lwr_Asig && Entry_Asig == 0X1B){	//Enviamos un (Fa5ta) a la salida del puerto D
 42c:	ac 14       	cp	r10, r12
 42e:	bd 04       	cpc	r11, r13
 430:	89 f4       	brne	.+34     	; 0x454 <__EEPROM_REGION_LENGTH__+0x54>
 432:	8b e1       	ldi	r24, 0x1B	; 27
 434:	a8 16       	cp	r10, r24
 436:	b1 04       	cpc	r11, r1
 438:	69 f4       	brne	.+26     	; 0x454 <__EEPROM_REGION_LENGTH__+0x54>
 43a:	08 c0       	rjmp	.+16     	; 0x44c <__EEPROM_REGION_LENGTH__+0x4c>
						while(Entry_Asig == Lwr_Asig){
							Debouncer();
 43c:	0e 94 6a 00 	call	0xd4	; 0xd4 <Debouncer>
							Entry_Asig = PIND;
 440:	a9 b0       	in	r10, 0x09	; 9
 442:	b1 2c       	mov	r11, r1
							Tone_Generator(Fa4ta*2);}
 444:	8a e0       	ldi	r24, 0x0A	; 10
 446:	9b e0       	ldi	r25, 0x0B	; 11
 448:	0e 94 4b 00 	call	0x96	; 0x96 <Tone_Generator>
							Debouncer();
							Entry_Asig = PIND;
							Tone_Generator(Mi4ta*2);}
							
					}else if(Entry_Asig == Lwr_Asig && Entry_Asig == 0X1B){	//Enviamos un (Fa5ta) a la salida del puerto D
						while(Entry_Asig == Lwr_Asig){
 44c:	ac 14       	cp	r10, r12
 44e:	bd 04       	cpc	r11, r13
 450:	a9 f3       	breq	.-22     	; 0x43c <__EEPROM_REGION_LENGTH__+0x3c>
 452:	2d c0       	rjmp	.+90     	; 0x4ae <__EEPROM_REGION_LENGTH__+0xae>
							Debouncer();
							Entry_Asig = PIND;
							Tone_Generator(Fa4ta*2);}
							
					}else if(Entry_Asig == Lwr_Asig && Entry_Asig == 0X17){	//Enviamos un (Fa#5ta) a la salida del puerto D
 454:	ac 14       	cp	r10, r12
 456:	bd 04       	cpc	r11, r13
 458:	89 f4       	brne	.+34     	; 0x47c <__EEPROM_REGION_LENGTH__+0x7c>
 45a:	97 e1       	ldi	r25, 0x17	; 23
 45c:	a9 16       	cp	r10, r25
 45e:	b1 04       	cpc	r11, r1
 460:	69 f4       	brne	.+26     	; 0x47c <__EEPROM_REGION_LENGTH__+0x7c>
 462:	08 c0       	rjmp	.+16     	; 0x474 <__EEPROM_REGION_LENGTH__+0x74>
						while(Entry_Asig == Lwr_Asig){
							Debouncer();
 464:	0e 94 6a 00 	call	0xd4	; 0xd4 <Debouncer>
							Entry_Asig = PIND;
 468:	a9 b0       	in	r10, 0x09	; 9
 46a:	b1 2c       	mov	r11, r1
							Tone_Generator(FaS4ta*2);}
 46c:	82 e9       	ldi	r24, 0x92	; 146
 46e:	9a e0       	ldi	r25, 0x0A	; 10
 470:	0e 94 4b 00 	call	0x96	; 0x96 <Tone_Generator>
							Debouncer();
							Entry_Asig = PIND;
							Tone_Generator(Fa4ta*2);}
							
					}else if(Entry_Asig == Lwr_Asig && Entry_Asig == 0X17){	//Enviamos un (Fa#5ta) a la salida del puerto D
						while(Entry_Asig == Lwr_Asig){
 474:	ac 14       	cp	r10, r12
 476:	bd 04       	cpc	r11, r13
 478:	a9 f3       	breq	.-22     	; 0x464 <__EEPROM_REGION_LENGTH__+0x64>
 47a:	19 c0       	rjmp	.+50     	; 0x4ae <__EEPROM_REGION_LENGTH__+0xae>
							Debouncer();
							Entry_Asig = PIND;
							Tone_Generator(FaS4ta*2);}
							
					}else if(Entry_Asig == Lwr_Asig && Entry_Asig == 0X0F){	//Enviamos un (Sol5ta) a la salida del puerto D
 47c:	ac 14       	cp	r10, r12
 47e:	bd 04       	cpc	r11, r13
 480:	89 f4       	brne	.+34     	; 0x4a4 <__EEPROM_REGION_LENGTH__+0xa4>
 482:	8f e0       	ldi	r24, 0x0F	; 15
 484:	a8 16       	cp	r10, r24
 486:	b1 04       	cpc	r11, r1
 488:	69 f4       	brne	.+26     	; 0x4a4 <__EEPROM_REGION_LENGTH__+0xa4>
 48a:	08 c0       	rjmp	.+16     	; 0x49c <__EEPROM_REGION_LENGTH__+0x9c>
						while(Entry_Asig == Lwr_Asig){
							Debouncer();
 48c:	0e 94 6a 00 	call	0xd4	; 0xd4 <Debouncer>
							Entry_Asig = PIND;
 490:	a9 b0       	in	r10, 0x09	; 9
 492:	b1 2c       	mov	r11, r1
							Tone_Generator(Sol4ta*2);}
 494:	8a ef       	ldi	r24, 0xFA	; 250
 496:	99 e0       	ldi	r25, 0x09	; 9
 498:	0e 94 4b 00 	call	0x96	; 0x96 <Tone_Generator>
							Debouncer();
							Entry_Asig = PIND;
							Tone_Generator(FaS4ta*2);}
							
					}else if(Entry_Asig == Lwr_Asig && Entry_Asig == 0X0F){	//Enviamos un (Sol5ta) a la salida del puerto D
						while(Entry_Asig == Lwr_Asig){
 49c:	ac 14       	cp	r10, r12
 49e:	bd 04       	cpc	r11, r13
 4a0:	a9 f3       	breq	.-22     	; 0x48c <__EEPROM_REGION_LENGTH__+0x8c>
 4a2:	05 c0       	rjmp	.+10     	; 0x4ae <__EEPROM_REGION_LENGTH__+0xae>
							Debouncer();
							Entry_Asig = PIND;
							Tone_Generator(Sol4ta*2);}
							
					}else if(Entry_Asig != Lwr_Asig ){Mute_Generator();}
 4a4:	ac 14       	cp	r10, r12
 4a6:	bd 04       	cpc	r11, r13
 4a8:	11 f0       	breq	.+4      	; 0x4ae <__EEPROM_REGION_LENGTH__+0xae>
 4aa:	0e 94 5b 00 	call	0xb6	; 0xb6 <Mute_Generator>
					}
					
				if( i == 4){	
 4ae:	04 30       	cpi	r16, 0x04	; 4
 4b0:	11 05       	cpc	r17, r1
 4b2:	09 f0       	breq	.+2      	; 0x4b6 <__EEPROM_REGION_LENGTH__+0xb6>
 4b4:	69 c0       	rjmp	.+210    	; 0x588 <__EEPROM_REGION_LENGTH__+0x188>
					if (Entry_Asig == Lwr_Asig && Entry_Asig == 0X1E ){		//Enviamos un (Sol#55ta) a la salida del puerto D
 4b6:	ac 14       	cp	r10, r12
 4b8:	bd 04       	cpc	r11, r13
 4ba:	89 f4       	brne	.+34     	; 0x4de <__EEPROM_REGION_LENGTH__+0xde>
 4bc:	9e e1       	ldi	r25, 0x1E	; 30
 4be:	a9 16       	cp	r10, r25
 4c0:	b1 04       	cpc	r11, r1
 4c2:	69 f4       	brne	.+26     	; 0x4de <__EEPROM_REGION_LENGTH__+0xde>
 4c4:	08 c0       	rjmp	.+16     	; 0x4d6 <__EEPROM_REGION_LENGTH__+0xd6>
						while(Entry_Asig == Lwr_Asig){
							Debouncer();
 4c6:	0e 94 6a 00 	call	0xd4	; 0xd4 <Debouncer>
							Entry_Asig = PIND;
 4ca:	a9 b0       	in	r10, 0x09	; 9
 4cc:	b1 2c       	mov	r11, r1
							Tone_Generator(SolS4ta*2);}
 4ce:	86 e6       	ldi	r24, 0x66	; 102
 4d0:	99 e0       	ldi	r25, 0x09	; 9
 4d2:	0e 94 4b 00 	call	0x96	; 0x96 <Tone_Generator>
					}else if(Entry_Asig != Lwr_Asig ){Mute_Generator();}
					}
					
				if( i == 4){	
					if (Entry_Asig == Lwr_Asig && Entry_Asig == 0X1E ){		//Enviamos un (Sol#55ta) a la salida del puerto D
						while(Entry_Asig == Lwr_Asig){
 4d6:	ac 14       	cp	r10, r12
 4d8:	bd 04       	cpc	r11, r13
 4da:	a9 f3       	breq	.-22     	; 0x4c6 <__EEPROM_REGION_LENGTH__+0xc6>
 4dc:	55 c0       	rjmp	.+170    	; 0x588 <__EEPROM_REGION_LENGTH__+0x188>
							Debouncer();
							Entry_Asig = PIND;
							Tone_Generator(SolS4ta*2);}
							
					}else if(Entry_Asig == Lwr_Asig && Entry_Asig == 0X1D ){	//Enviamos un (La5ta) a la salida del puerto D
 4de:	ac 14       	cp	r10, r12
 4e0:	bd 04       	cpc	r11, r13
 4e2:	89 f4       	brne	.+34     	; 0x506 <__EEPROM_REGION_LENGTH__+0x106>
 4e4:	8d e1       	ldi	r24, 0x1D	; 29
 4e6:	a8 16       	cp	r10, r24
 4e8:	b1 04       	cpc	r11, r1
 4ea:	69 f4       	brne	.+26     	; 0x506 <__EEPROM_REGION_LENGTH__+0x106>
 4ec:	08 c0       	rjmp	.+16     	; 0x4fe <__EEPROM_REGION_LENGTH__+0xfe>
						while(Entry_Asig == Lwr_Asig){
							Debouncer();
 4ee:	0e 94 6a 00 	call	0xd4	; 0xd4 <Debouncer>
							Entry_Asig = PIND;
 4f2:	a9 b0       	in	r10, 0x09	; 9
 4f4:	b1 2c       	mov	r11, r1
							Tone_Generator(La4ta*2);}
 4f6:	8e ed       	ldi	r24, 0xDE	; 222
 4f8:	98 e0       	ldi	r25, 0x08	; 8
 4fa:	0e 94 4b 00 	call	0x96	; 0x96 <Tone_Generator>
							Debouncer();
							Entry_Asig = PIND;
							Tone_Generator(SolS4ta*2);}
							
					}else if(Entry_Asig == Lwr_Asig && Entry_Asig == 0X1D ){	//Enviamos un (La5ta) a la salida del puerto D
						while(Entry_Asig == Lwr_Asig){
 4fe:	ac 14       	cp	r10, r12
 500:	bd 04       	cpc	r11, r13
 502:	a9 f3       	breq	.-22     	; 0x4ee <__EEPROM_REGION_LENGTH__+0xee>
 504:	41 c0       	rjmp	.+130    	; 0x588 <__EEPROM_REGION_LENGTH__+0x188>
							Debouncer();
							Entry_Asig = PIND;
							Tone_Generator(La4ta*2);}
							
					}else if(Entry_Asig == Lwr_Asig && Entry_Asig == 0X1B ){	//Enviamos un (La#5ta) a la salida del puerto D
 506:	ac 14       	cp	r10, r12
 508:	bd 04       	cpc	r11, r13
 50a:	89 f4       	brne	.+34     	; 0x52e <__EEPROM_REGION_LENGTH__+0x12e>
 50c:	9b e1       	ldi	r25, 0x1B	; 27
 50e:	a9 16       	cp	r10, r25
 510:	b1 04       	cpc	r11, r1
 512:	69 f4       	brne	.+26     	; 0x52e <__EEPROM_REGION_LENGTH__+0x12e>
 514:	08 c0       	rjmp	.+16     	; 0x526 <__EEPROM_REGION_LENGTH__+0x126>
						while(Entry_Asig == Lwr_Asig){
							Debouncer();
 516:	0e 94 6a 00 	call	0xd4	; 0xd4 <Debouncer>
							Entry_Asig = PIND;
 51a:	a9 b0       	in	r10, 0x09	; 9
 51c:	b1 2c       	mov	r11, r1
							Tone_Generator(LaS4ta*2);}
 51e:	8a ea       	ldi	r24, 0xAA	; 170
 520:	9a e0       	ldi	r25, 0x0A	; 10
 522:	0e 94 4b 00 	call	0x96	; 0x96 <Tone_Generator>
							Debouncer();
							Entry_Asig = PIND;
							Tone_Generator(La4ta*2);}
							
					}else if(Entry_Asig == Lwr_Asig && Entry_Asig == 0X1B ){	//Enviamos un (La#5ta) a la salida del puerto D
						while(Entry_Asig == Lwr_Asig){
 526:	ac 14       	cp	r10, r12
 528:	bd 04       	cpc	r11, r13
 52a:	a9 f3       	breq	.-22     	; 0x516 <__EEPROM_REGION_LENGTH__+0x116>
 52c:	2d c0       	rjmp	.+90     	; 0x588 <__EEPROM_REGION_LENGTH__+0x188>
							Debouncer();
							Entry_Asig = PIND;
							Tone_Generator(LaS4ta*2);}
							
					}else if(Entry_Asig == Lwr_Asig && Entry_Asig == 0X17 ){	//Enviamos un (Si5ta) a la salida del puerto D
 52e:	ac 14       	cp	r10, r12
 530:	bd 04       	cpc	r11, r13
 532:	89 f4       	brne	.+34     	; 0x556 <__EEPROM_REGION_LENGTH__+0x156>
 534:	87 e1       	ldi	r24, 0x17	; 23
 536:	a8 16       	cp	r10, r24
 538:	b1 04       	cpc	r11, r1
 53a:	69 f4       	brne	.+26     	; 0x556 <__EEPROM_REGION_LENGTH__+0x156>
 53c:	08 c0       	rjmp	.+16     	; 0x54e <__EEPROM_REGION_LENGTH__+0x14e>
						while(Entry_Asig == Lwr_Asig){
							Debouncer();
 53e:	0e 94 6a 00 	call	0xd4	; 0xd4 <Debouncer>
							Entry_Asig = PIND;
 542:	a9 b0       	in	r10, 0x09	; 9
 544:	b1 2c       	mov	r11, r1
							Tone_Generator(Si4ta*2);}
 546:	8a ee       	ldi	r24, 0xEA	; 234
 548:	97 e0       	ldi	r25, 0x07	; 7
 54a:	0e 94 4b 00 	call	0x96	; 0x96 <Tone_Generator>
							Debouncer();
							Entry_Asig = PIND;
							Tone_Generator(LaS4ta*2);}
							
					}else if(Entry_Asig == Lwr_Asig && Entry_Asig == 0X17 ){	//Enviamos un (Si5ta) a la salida del puerto D
						while(Entry_Asig == Lwr_Asig){
 54e:	ac 14       	cp	r10, r12
 550:	bd 04       	cpc	r11, r13
 552:	a9 f3       	breq	.-22     	; 0x53e <__EEPROM_REGION_LENGTH__+0x13e>
 554:	19 c0       	rjmp	.+50     	; 0x588 <__EEPROM_REGION_LENGTH__+0x188>
							Debouncer();
							Entry_Asig = PIND;
							Tone_Generator(Si4ta*2);}
							
					}else if(Entry_Asig == Lwr_Asig && Entry_Asig == 0X0F ){	//Enviamos un (Do6ta) a la salida del puerto D
 556:	ac 14       	cp	r10, r12
 558:	bd 04       	cpc	r11, r13
 55a:	89 f4       	brne	.+34     	; 0x57e <__EEPROM_REGION_LENGTH__+0x17e>
 55c:	9f e0       	ldi	r25, 0x0F	; 15
 55e:	a9 16       	cp	r10, r25
 560:	b1 04       	cpc	r11, r1
 562:	69 f4       	brne	.+26     	; 0x57e <__EEPROM_REGION_LENGTH__+0x17e>
 564:	08 c0       	rjmp	.+16     	; 0x576 <__EEPROM_REGION_LENGTH__+0x176>
						while(Entry_Asig == Lwr_Asig){
							Debouncer();
 566:	0e 94 6a 00 	call	0xd4	; 0xd4 <Debouncer>
							Entry_Asig = PIND;
 56a:	a9 b0       	in	r10, 0x09	; 9
 56c:	b1 2c       	mov	r11, r1
							Tone_Generator(Do4ta*4);}
 56e:	88 ee       	ldi	r24, 0xE8	; 232
 570:	9d e1       	ldi	r25, 0x1D	; 29
 572:	0e 94 4b 00 	call	0x96	; 0x96 <Tone_Generator>
							Debouncer();
							Entry_Asig = PIND;
							Tone_Generator(Si4ta*2);}
							
					}else if(Entry_Asig == Lwr_Asig && Entry_Asig == 0X0F ){	//Enviamos un (Do6ta) a la salida del puerto D
						while(Entry_Asig == Lwr_Asig){
 576:	ac 14       	cp	r10, r12
 578:	bd 04       	cpc	r11, r13
 57a:	a9 f3       	breq	.-22     	; 0x566 <__EEPROM_REGION_LENGTH__+0x166>
 57c:	05 c0       	rjmp	.+10     	; 0x588 <__EEPROM_REGION_LENGTH__+0x188>
							Debouncer();
							Entry_Asig = PIND;
							Tone_Generator(Do4ta*4);}
							
					}else if(Entry_Asig != Lwr_Asig ){Mute_Generator();}
 57e:	ac 14       	cp	r10, r12
 580:	bd 04       	cpc	r11, r13
 582:	11 f0       	breq	.+4      	; 0x588 <__EEPROM_REGION_LENGTH__+0x188>
 584:	0e 94 5b 00 	call	0xb6	; 0xb6 <Mute_Generator>
	int Debouncer();			//Retraso general
	
    while (1) 
    {
		for(i = 0; i <= 4 ; i += 1){
			for(j = 0; j <= 4 ; j += 1){		
 588:	8f ef       	ldi	r24, 0xFF	; 255
 58a:	e8 1a       	sub	r14, r24
 58c:	f8 0a       	sbc	r15, r24
 58e:	02 c0       	rjmp	.+4      	; 0x594 <__EEPROM_REGION_LENGTH__+0x194>
 590:	e1 2c       	mov	r14, r1
 592:	f1 2c       	mov	r15, r1
 594:	95 e0       	ldi	r25, 0x05	; 5
 596:	e9 16       	cp	r14, r25
 598:	f1 04       	cpc	r15, r1
 59a:	0c f4       	brge	.+2      	; 0x59e <__EEPROM_REGION_LENGTH__+0x19e>
 59c:	be cd       	rjmp	.-1156   	; 0x11a <main+0x38>
	int Mute_Generator();		//Genera un silencio si no se presiona una tecla en especifico
	int Debouncer();			//Retraso general
	
    while (1) 
    {
		for(i = 0; i <= 4 ; i += 1){
 59e:	0f 5f       	subi	r16, 0xFF	; 255
 5a0:	1f 4f       	sbci	r17, 0xFF	; 255
 5a2:	05 30       	cpi	r16, 0x05	; 5
 5a4:	11 05       	cpc	r17, r1
 5a6:	a4 f3       	brlt	.-24     	; 0x590 <__EEPROM_REGION_LENGTH__+0x190>
 5a8:	b5 cd       	rjmp	.-1174   	; 0x114 <main+0x32>

000005aa <_exit>:
 5aa:	f8 94       	cli

000005ac <__stop_program>:
 5ac:	ff cf       	rjmp	.-2      	; 0x5ac <__stop_program>
